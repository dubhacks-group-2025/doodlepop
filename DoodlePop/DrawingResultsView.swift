//
//  DrawingResultsView.swift
//  BloomDraw
//
//  Created by Kellie Ho on 2025-10-18.
//

import SwiftUI
import PencilKit

struct DrawingResultsView: View {
    let drawing: Drawing
    @Environment(\.dismiss) private var dismiss
    @State private var selectedTab = 0
    
    var body: some View {
        NavigationStack {
            TabView(selection: $selectedTab) {
                // User's Drawing Tab
                VStack(spacing: 20) {
                    Text("Your Drawing")
                        .font(.title2)
                        .fontWeight(.bold)
                        .foregroundColor(.primary)
                    
                    if let pkDrawing = drawing.pkDrawing {
                        Image(uiImage: pkDrawing.image(from: pkDrawing.bounds, scale: 1.0))
                            .resizable()
                            .aspectRatio(contentMode: .fit)
                            .background(Color.white)
                            .cornerRadius(16)
                            .shadow(color: .black.opacity(0.1), radius: 8, x: 0, y: 4)
                            .padding(.horizontal, 20)
                    } else {
                        RoundedRectangle(cornerRadius: 16)
                            .fill(Color.gray.opacity(0.3))
                            .frame(height: 300)
                            .overlay(
                                Text("No drawing data")
                                    .foregroundColor(.secondary)
                            )
                    }
                    
                    Text(drawing.name)
                        .font(.headline)
                        .foregroundColor(.primary)
                    
                    Spacer()
                }
                .padding()
                .tabItem {
                    Image(systemName: "paintbrush.pointed")
                    Text("Your Drawing")
                }
                .tag(0)
                
                // Generated Drawing Tab (Placeholder)
                VStack(spacing: 20) {
                    Text("Generated 3D Object")
                        .font(.title2)
                        .fontWeight(.bold)
                        .foregroundColor(.primary)
                    
                    // Placeholder for generated 3D object
                    ZStack {
                        RoundedRectangle(cornerRadius: 16)
                            .fill(
                                LinearGradient(
                                    colors: [.purple.opacity(0.3), .pink.opacity(0.3)],
                                    startPoint: .topLeading,
                                    endPoint: .bottomTrailing
                                )
                            )
                            .frame(height: 300)
                        
                        VStack(spacing: 16) {
                            Image(systemName: "cube.box")
                                .font(.system(size: 60))
                                .foregroundColor(.purple)
                            
                            Text("3D Object")
                                .font(.title3)
                                .fontWeight(.semibold)
                                .foregroundColor(.primary)
                            
                            Text("Generated by AI")
                                .font(.caption)
                                .foregroundColor(.secondary)
                        }
                    }
                    .shadow(color: .black.opacity(0.1), radius: 8, x: 0, y: 4)
                    .padding(.horizontal, 20)
                    
                    Text("Coming Soon!")
                        .font(.headline)
                        .foregroundColor(.primary)
                    
                    Spacer()
                }
                .padding()
                .tabItem {
                    Image(systemName: "cube.box")
                    Text("3D Object")
                }
                .tag(1)
                
                // Spatial Scene Tab (visionOS)
                SpatialSceneView()
                    .tabItem {
                        Image(systemName: "view.3d")
                        Text("Spatial View")
                    }
                    .tag(2)
            }
            .navigationTitle("Drawing Results")
            .navigationBarTitleDisplayMode(.inline)
            .toolbar {
                ToolbarItem(placement: .navigationBarLeading) {
                    Button("Done") {
                        dismiss()
                    }
                }
            }
        }
    }
}

struct SpatialSceneView: View {
    var body: some View {
        VStack(spacing: 20) {
            Text("Spatial Environment")
                .font(.title2)
                .fontWeight(.bold)
                .foregroundColor(.primary)
            
            // Placeholder for spatial 3D scene
            ZStack {
                RoundedRectangle(cornerRadius: 16)
                    .fill(
                        LinearGradient(
                            colors: [.blue.opacity(0.3), .cyan.opacity(0.3)],
                            startPoint: .topLeading,
                            endPoint: .bottomTrailing
                        )
                    )
                    .frame(height: 400)
                
                VStack(spacing: 16) {
                    Image(systemName: "view.3d")
                        .font(.system(size: 80))
                        .foregroundColor(.blue)
                    
                    Text("3D Environment")
                        .font(.title3)
                        .fontWeight(.semibold)
                        .foregroundColor(.primary)
                    
                    Text("Place your 3D object in space")
                        .font(.caption)
                        .foregroundColor(.secondary)
                        .multilineTextAlignment(.center)
                }
            }
            .shadow(color: .black.opacity(0.1), radius: 8, x: 0, y: 4)
            .padding(.horizontal, 20)
            
            Text("Spatial View Coming Soon!")
                .font(.headline)
                .foregroundColor(.primary)
            
            Spacer()
        }
        .padding()
    }
}

#Preview {
    DrawingResultsView(drawing: Drawing(name: "Test Drawing", drawingData: Data()))
}
